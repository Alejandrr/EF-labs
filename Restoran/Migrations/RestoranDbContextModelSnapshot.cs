// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restoran;

#nullable disable

namespace Restoran.Migrations
{
    [DbContext(typeof(RestoranDbContext))]
    partial class RestoranDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restoran.Customer", b =>
                {
                    b.Property<short>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("CId"));

                    b.Property<string>("CPib")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("C_PIB");

                    b.HasKey("CId");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Restoran.Dish", b =>
                {
                    b.Property<short>("DId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("DId"));

                    b.Property<bool?>("DAviable")
                        .HasColumnType("bit");

                    b.Property<int?>("DCalority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("DName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("DPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("DType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short?>("IngridientIId")
                        .HasColumnType("smallint");

                    b.HasKey("DId");

                    b.HasIndex("IngridientIId");

                    b.ToTable("Dishes", (string)null);
                });

            modelBuilder.Entity("Restoran.DishNumerate", b =>
                {
                    b.Property<short>("DnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("DnId"));

                    b.Property<short?>("DishDId")
                        .HasColumnType("smallint");

                    b.Property<int>("DnDishes")
                        .HasColumnType("int");

                    b.Property<decimal?>("DnPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((10.2))");

                    b.Property<DateTime?>("DnTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('2022-06-07 07:07:00')");

                    b.HasKey("DnId");

                    b.HasIndex("DishDId");

                    b.ToTable("DishNumerates", (string)null);
                });

            modelBuilder.Entity("Restoran.Ingridient", b =>
                {
                    b.Property<short>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("IId"));

                    b.Property<bool?>("IAviable")
                        .HasColumnType("bit");

                    b.Property<string>("IName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("IPriceFromZavod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("IWeight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IId");

                    b.ToTable("Ingridients", (string)null);
                });

            modelBuilder.Entity("Restoran.Ordering", b =>
                {
                    b.Property<short>("OId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("OId"));

                    b.Property<short>("OCId")
                        .HasColumnType("smallint");

                    b.Property<short>("ODnId")
                        .HasColumnType("smallint");

                    b.Property<short>("OPId")
                        .HasColumnType("smallint");

                    b.Property<byte>("OPosition")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("OTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('2022 June 07 08:7:0')");

                    b.Property<short>("OWId")
                        .HasColumnType("smallint");

                    b.HasKey("OId");

                    b.HasIndex("OCId");

                    b.HasIndex("ODnId");

                    b.HasIndex("OPId")
                        .IsUnique();

                    b.HasIndex("OWId");

                    b.ToTable("Orderings", (string)null);
                });

            modelBuilder.Entity("Restoran.Position", b =>
                {
                    b.Property<short>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("PId"));

                    b.Property<short>("PChairs")
                        .HasColumnType("smallint");

                    b.Property<string>("PRoomType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PRoomType");

                    b.Property<string>("PType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PType");

                    b.HasKey("PId");

                    b.ToTable("Positions", null, t =>
                        {
                            t.HasCheckConstraint("PRoomType", "PRoomType IN('For love','Bathroom','Bar','Terrasa')");

                            t.HasCheckConstraint("PType", "P_Type IN('Small', 'Medium', 'Large')");
                        });
                });

            modelBuilder.Entity("Restoran.Restoraunt", b =>
                {
                    b.Property<short>("RId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("RId"));

                    b.Property<string>("RAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RAddress");

                    b.Property<int?>("RClients")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RClients")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("RName");

                    b.Property<short>("RTables")
                        .HasColumnType("smallint")
                        .HasColumnName("RTables");

                    b.Property<int>("RWorkers")
                        .HasColumnType("int")
                        .HasColumnName("RWorkers");

                    b.HasKey("RId");

                    b.HasIndex(new[] { "RAddress" }, "Restorans_RAddress")
                        .IsUnique();

                    b.HasIndex(new[] { "RName" }, "Restorans_RName")
                        .IsUnique();

                    b.ToTable("Restorans", (string)null);
                });

            modelBuilder.Entity("Restoran.Worker", b =>
                {
                    b.Property<short>("WId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("WId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("WId"));

                    b.Property<string>("WDocument")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("WDocument");

                    b.Property<string>("WIpn")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("WIpn");

                    b.Property<string>("WPib")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("WPib");

                    b.Property<string>("WRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WSalary")
                        .HasColumnType("money")
                        .HasColumnName("WSalary");

                    b.HasKey("WId");

                    b.HasIndex(new[] { "WDocument" }, "Workers_WDocument")
                        .IsUnique();

                    b.HasIndex(new[] { "WIpn" }, "Workers_WIpn")
                        .IsUnique();

                    b.HasIndex(new[] { "WPib" }, "Workers_WPib")
                        .IsUnique();

                    b.ToTable("Workers", (string)null);
                });

            modelBuilder.Entity("Restoran.Dish", b =>
                {
                    b.HasOne("Restoran.Ingridient", null)
                        .WithMany("Recepts")
                        .HasForeignKey("IngridientIId");
                });

            modelBuilder.Entity("Restoran.DishNumerate", b =>
                {
                    b.HasOne("Restoran.Dish", null)
                        .WithMany("Orderings")
                        .HasForeignKey("DishDId");
                });

            modelBuilder.Entity("Restoran.Ordering", b =>
                {
                    b.HasOne("Restoran.Customer", "OC")
                        .WithMany("Orderings")
                        .HasForeignKey("OCId")
                        .IsRequired();

                    b.HasOne("Restoran.DishNumerate", "ODn")
                        .WithMany("Orderings")
                        .HasForeignKey("ODnId")
                        .IsRequired();

                    b.HasOne("Restoran.Position", "OP")
                        .WithOne("POrder")
                        .HasForeignKey("Restoran.Ordering", "OPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restoran.Worker", "OW")
                        .WithMany("Orderings")
                        .HasForeignKey("OWId")
                        .IsRequired();

                    b.Navigation("OC");

                    b.Navigation("ODn");

                    b.Navigation("OP");

                    b.Navigation("OW");
                });

            modelBuilder.Entity("Restoran.Customer", b =>
                {
                    b.Navigation("Orderings");
                });

            modelBuilder.Entity("Restoran.Dish", b =>
                {
                    b.Navigation("Orderings");
                });

            modelBuilder.Entity("Restoran.DishNumerate", b =>
                {
                    b.Navigation("Orderings");
                });

            modelBuilder.Entity("Restoran.Ingridient", b =>
                {
                    b.Navigation("Recepts");
                });

            modelBuilder.Entity("Restoran.Position", b =>
                {
                    b.Navigation("POrder");
                });

            modelBuilder.Entity("Restoran.Worker", b =>
                {
                    b.Navigation("Orderings");
                });
#pragma warning restore 612, 618
        }
    }
}
